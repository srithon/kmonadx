// silent rule so it does not show up in output
// WHITESPACE is a special builtin rule that is implicitly put in around each instance of ~
// you can stop this from happening by using atomic rules
WHITESPACE = _{ (" ")+ }

not_newline = {
  !(NEWLINE) ~ ANY
}

// another builtin rule
// we say that comments do not start with #( in order to disambiguate them from tap macros, which use the #( syntax
COMMENT = _{ "#" ~ not_newline* ~ NEWLINE}

// REGULAR ATOMIC
// we do not want whitespace between the characters
identifier = @{
  (ASCII_ALPHANUMERIC | "_" | "-")+
}

table = @{
  table_header ~
  table_body
}

// table_header is atomic so it does not implicitly allow whitespace
// it is regular atomic as opposed to "compound atomic" because we do not want all the inner rules to evaluate
table_header = ${
  "[" ~ (table_header | table_name) ~ "]"
}

table_name = ${
  identifier ~ ("." ~ identifier)*
}

table_body = _{
  // including the NEWLINE in the beginning of the rule to avoid handling the EOI case at the end
  (NEWLINE+ ~ (assignment | table))*
}

assignment = {
  identifier ~
  "=" ~
  normal_button
}

// this rule matches parentheses
// this means that normal_button's can span over multiple lines
normal_button = {
  "(" ~
    (
     // a bunch of non-parentheses characters
     (!("(" | ")") ~ ANY)+ ~
     // followed by an optional button
     (normal_button)?
    // repeated many times
    )* ~
  // enclosed within parentheses
  ")"
}

// the underscore makes the "main" rule silent
// this means that it will not appear in our output
main = _{
  SOI ~ NEWLINE* ~ table* ~ NEWLINE* ~ EOI
}
